// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: msg/im_msg_svr.proto

package im_msg

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 存储用户发送的消息
type IMSendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey    string   `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`          // app key
	SessionId string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话ID
	MsgScope  uint32   `protobuf:"varint,3,opt,name=msg_scope,json=msgScope,proto3" json:"msg_scope,omitempty"`   // 消息范围，代表单聊还是群聊
	MsgFrom   string   `protobuf:"bytes,4,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`       // 消息发送方
	MsgTo     string   `protobuf:"bytes,5,opt,name=msg_to,json=msgTo,proto3" json:"msg_to,omitempty"`             // 消息发送给谁
	MsgType   uint32   `protobuf:"varint,6,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`      // 消息类型
	Msg       *any.Any `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`                              // 消息体，具体参考上述定义的各类型消息体
	Ext       string   `protobuf:"bytes,8,opt,name=ext,proto3" json:"ext,omitempty"`                              // 开发者扩展字段
}

func (x *IMSendMessageRequest) Reset() {
	*x = IMSendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMSendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMSendMessageRequest) ProtoMessage() {}

func (x *IMSendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMSendMessageRequest.ProtoReflect.Descriptor instead.
func (*IMSendMessageRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{0}
}

func (x *IMSendMessageRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *IMSendMessageRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *IMSendMessageRequest) GetMsgScope() uint32 {
	if x != nil {
		return x.MsgScope
	}
	return 0
}

func (x *IMSendMessageRequest) GetMsgFrom() string {
	if x != nil {
		return x.MsgFrom
	}
	return ""
}

func (x *IMSendMessageRequest) GetMsgTo() string {
	if x != nil {
		return x.MsgTo
	}
	return ""
}

func (x *IMSendMessageRequest) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *IMSendMessageRequest) GetMsg() *any.Any {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *IMSendMessageRequest) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

type SaveSendMsgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId    string `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	SendTime string `protobuf:"bytes,2,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
}

func (x *SaveSendMsgResponse) Reset() {
	*x = SaveSendMsgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSendMsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSendMsgResponse) ProtoMessage() {}

func (x *SaveSendMsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSendMsgResponse.ProtoReflect.Descriptor instead.
func (*SaveSendMsgResponse) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{1}
}

func (x *SaveSendMsgResponse) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *SaveSendMsgResponse) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

type SaveBatchMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey   string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`         // app key
	MsgFrom  string `protobuf:"bytes,2,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`      // 发送者用户id
	MsgToIds string `protobuf:"bytes,3,opt,name=msg_to_ids,json=msgToIds,proto3" json:"msg_to_ids,omitempty"` // 接收者用户 id
	MsgType  int32  `protobuf:"varint,4,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`     // 消息类型
	Msg      string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`                             // 消息体，具体参考上述定义的各类型消息体
	Ext      string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
	Tid      string `protobuf:"bytes,7,opt,name=tid,proto3" json:"tid,omitempty"`
}

func (x *SaveBatchMessageRequest) Reset() {
	*x = SaveBatchMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBatchMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBatchMessageRequest) ProtoMessage() {}

func (x *SaveBatchMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBatchMessageRequest.ProtoReflect.Descriptor instead.
func (*SaveBatchMessageRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{2}
}

func (x *SaveBatchMessageRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *SaveBatchMessageRequest) GetMsgFrom() string {
	if x != nil {
		return x.MsgFrom
	}
	return ""
}

func (x *SaveBatchMessageRequest) GetMsgToIds() string {
	if x != nil {
		return x.MsgToIds
	}
	return ""
}

func (x *SaveBatchMessageRequest) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *SaveBatchMessageRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SaveBatchMessageRequest) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SaveBatchMessageRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

// 存储用户接收的消息
type IMReceivedMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey    string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话ID
	MsgFrom   string `protobuf:"bytes,3,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`
	MsgTo     string `protobuf:"bytes,4,opt,name=msg_to,json=msgTo,proto3" json:"msg_to,omitempty"`
	MsgId     string `protobuf:"bytes,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Flag      uint32 `protobuf:"varint,6,opt,name=flag,proto3" json:"flag,omitempty"` // 消息的状态
}

func (x *IMReceivedMessageRequest) Reset() {
	*x = IMReceivedMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMReceivedMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMReceivedMessageRequest) ProtoMessage() {}

func (x *IMReceivedMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMReceivedMessageRequest.ProtoReflect.Descriptor instead.
func (*IMReceivedMessageRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{3}
}

func (x *IMReceivedMessageRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *IMReceivedMessageRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *IMReceivedMessageRequest) GetMsgFrom() string {
	if x != nil {
		return x.MsgFrom
	}
	return ""
}

func (x *IMReceivedMessageRequest) GetMsgTo() string {
	if x != nil {
		return x.MsgTo
	}
	return ""
}

func (x *IMReceivedMessageRequest) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *IMReceivedMessageRequest) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

type IMReceivedMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId  string `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	MsgSeq int64  `protobuf:"varint,2,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`
}

func (x *IMReceivedMessageResponse) Reset() {
	*x = IMReceivedMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMReceivedMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMReceivedMessageResponse) ProtoMessage() {}

func (x *IMReceivedMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMReceivedMessageResponse.ProtoReflect.Descriptor instead.
func (*IMReceivedMessageResponse) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{4}
}

func (x *IMReceivedMessageResponse) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *IMReceivedMessageResponse) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

// 标记用户消息已读
type MsgMarkReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey  string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	MsgFrom string `protobuf:"bytes,2,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`
	MsgTo   string `protobuf:"bytes,3,opt,name=msg_to,json=msgTo,proto3" json:"msg_to,omitempty"`
	MsgSeq  int64  `protobuf:"varint,4,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`
}

func (x *MsgMarkReadRequest) Reset() {
	*x = MsgMarkReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMarkReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMarkReadRequest) ProtoMessage() {}

func (x *MsgMarkReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMarkReadRequest.ProtoReflect.Descriptor instead.
func (*MsgMarkReadRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{5}
}

func (x *MsgMarkReadRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *MsgMarkReadRequest) GetMsgFrom() string {
	if x != nil {
		return x.MsgFrom
	}
	return ""
}

func (x *MsgMarkReadRequest) GetMsgTo() string {
	if x != nil {
		return x.MsgTo
	}
	return ""
}

func (x *MsgMarkReadRequest) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

// 标记用户已被客户端接收
type MsgMarkReceivedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey string   `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	MsgTo  string   `protobuf:"bytes,2,opt,name=msg_to,json=msgTo,proto3" json:"msg_to,omitempty"`
	MsgIds []string `protobuf:"bytes,3,rep,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
}

func (x *MsgMarkReceivedRequest) Reset() {
	*x = MsgMarkReceivedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMarkReceivedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMarkReceivedRequest) ProtoMessage() {}

func (x *MsgMarkReceivedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMarkReceivedRequest.ProtoReflect.Descriptor instead.
func (*MsgMarkReceivedRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{6}
}

func (x *MsgMarkReceivedRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *MsgMarkReceivedRequest) GetMsgTo() string {
	if x != nil {
		return x.MsgTo
	}
	return ""
}

func (x *MsgMarkReceivedRequest) GetMsgIds() []string {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

// 获取用户最近的会话列表
type GetUserRecentSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"` // AppKey
	Accid  string `protobuf:"bytes,2,opt,name=accid,proto3" json:"accid,omitempty"`                 // 用户Id
}

func (x *GetUserRecentSessionsRequest) Reset() {
	*x = GetUserRecentSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRecentSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRecentSessionsRequest) ProtoMessage() {}

func (x *GetUserRecentSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRecentSessionsRequest.ProtoReflect.Descriptor instead.
func (*GetUserRecentSessionsRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserRecentSessionsRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *GetUserRecentSessionsRequest) GetAccid() string {
	if x != nil {
		return x.Accid
	}
	return ""
}

type GetUserRecentSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*UserSession `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"` // 用户最近会话记录数据
}

func (x *GetUserRecentSessionsResponse) Reset() {
	*x = GetUserRecentSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRecentSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRecentSessionsResponse) ProtoMessage() {}

func (x *GetUserRecentSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRecentSessionsResponse.ProtoReflect.Descriptor instead.
func (*GetUserRecentSessionsResponse) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserRecentSessionsResponse) GetSessions() []*UserSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type UserSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string              `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	To           string              `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"` // 消息联系人
	Type         int32               `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	UnreadNumber int32               `protobuf:"varint,4,opt,name=unread_number,json=unreadNumber,proto3" json:"unread_number,omitempty"` // 未读消息总量
	LastMsg      *UserSessionLastMsg `protobuf:"bytes,5,opt,name=last_msg,json=lastMsg,proto3" json:"last_msg,omitempty"`                 // 最新的消息
}

func (x *UserSession) Reset() {
	*x = UserSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSession) ProtoMessage() {}

func (x *UserSession) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSession.ProtoReflect.Descriptor instead.
func (*UserSession) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{9}
}

func (x *UserSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UserSession) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *UserSession) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserSession) GetUnreadNumber() int32 {
	if x != nil {
		return x.UnreadNumber
	}
	return 0
}

func (x *UserSession) GetLastMsg() *UserSessionLastMsg {
	if x != nil {
		return x.LastMsg
	}
	return nil
}

type UserSessionLastMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType    uint32          `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`         // 消息类型
	SendTime   string          `protobuf:"bytes,2,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`       // 消息发送时间
	MsgContent *MessageContent `protobuf:"bytes,3,opt,name=msg_content,json=msgContent,proto3" json:"msg_content,omitempty"` // 消息内容
	MsgFrom    string          `protobuf:"bytes,4,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`
	MsgTo      string          `protobuf:"bytes,5,opt,name=msg_to,json=msgTo,proto3" json:"msg_to,omitempty"`
	MsgSeq     int64           `protobuf:"varint,6,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`
	Ext        string          `protobuf:"bytes,7,opt,name=ext,proto3" json:"ext,omitempty"`
	Msg        *MessageContent `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"` // 消息内容
}

func (x *UserSessionLastMsg) Reset() {
	*x = UserSessionLastMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSessionLastMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSessionLastMsg) ProtoMessage() {}

func (x *UserSessionLastMsg) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSessionLastMsg.ProtoReflect.Descriptor instead.
func (*UserSessionLastMsg) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{10}
}

func (x *UserSessionLastMsg) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *UserSessionLastMsg) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

func (x *UserSessionLastMsg) GetMsgContent() *MessageContent {
	if x != nil {
		return x.MsgContent
	}
	return nil
}

func (x *UserSessionLastMsg) GetMsgFrom() string {
	if x != nil {
		return x.MsgFrom
	}
	return ""
}

func (x *UserSessionLastMsg) GetMsgTo() string {
	if x != nil {
		return x.MsgTo
	}
	return ""
}

func (x *UserSessionLastMsg) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *UserSessionLastMsg) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *UserSessionLastMsg) GetMsg() *MessageContent {
	if x != nil {
		return x.Msg
	}
	return nil
}

//*
// 文本消息
type TextMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"` // 消息文本
}

func (x *TextMessage) Reset() {
	*x = TextMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessage) ProtoMessage() {}

func (x *TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessage.ProtoReflect.Descriptor instead.
func (*TextMessage) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{11}
}

func (x *TextMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

//*
// 图片消息
type ImageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`  // 图片名称
	Md5  string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`    // 图片md5
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`    // 图片url
	Ext  string `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`    // 图片后缀
	W    int32  `protobuf:"varint,5,opt,name=w,proto3" json:"w,omitempty"`       // 宽
	H    int32  `protobuf:"varint,6,opt,name=h,proto3" json:"h,omitempty"`       // 高
	Size int32  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"` // 图片大小
}

func (x *ImageMessage) Reset() {
	*x = ImageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMessage) ProtoMessage() {}

func (x *ImageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMessage.ProtoReflect.Descriptor instead.
func (*ImageMessage) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{12}
}

func (x *ImageMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageMessage) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ImageMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImageMessage) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *ImageMessage) GetW() int32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *ImageMessage) GetH() int32 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *ImageMessage) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

//*
// 音频消息
type AudioMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dur  int32  `protobuf:"varint,1,opt,name=dur,proto3" json:"dur,omitempty"`   // 语音持续时长(ms)
	Md5  string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`    // 语音文件的md5值
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`    // 语音文件的url
	Ext  string `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`    // 语音文件的格式
	Size int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"` // 语音文件的大小
}

func (x *AudioMessage) Reset() {
	*x = AudioMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioMessage) ProtoMessage() {}

func (x *AudioMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioMessage.ProtoReflect.Descriptor instead.
func (*AudioMessage) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{13}
}

func (x *AudioMessage) GetDur() int32 {
	if x != nil {
		return x.Dur
	}
	return 0
}

func (x *AudioMessage) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AudioMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AudioMessage) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *AudioMessage) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

//*
// 视频消息
type VideoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dur  int32  `protobuf:"varint,1,opt,name=dur,proto3" json:"dur,omitempty"`   // 视频持续时长(ms)
	Md5  string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`    // 视频文件的md5值
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`    // 视频文件的url
	Ext  string `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`    // 视频文件的格式
	Size int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"` // 视频文件的大小
	W    int32  `protobuf:"varint,6,opt,name=w,proto3" json:"w,omitempty"`       // 宽
	H    int32  `protobuf:"varint,7,opt,name=h,proto3" json:"h,omitempty"`       // 高
}

func (x *VideoMessage) Reset() {
	*x = VideoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMessage) ProtoMessage() {}

func (x *VideoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMessage.ProtoReflect.Descriptor instead.
func (*VideoMessage) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{14}
}

func (x *VideoMessage) GetDur() int32 {
	if x != nil {
		return x.Dur
	}
	return 0
}

func (x *VideoMessage) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *VideoMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VideoMessage) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *VideoMessage) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VideoMessage) GetW() int32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *VideoMessage) GetH() int32 {
	if x != nil {
		return x.H
	}
	return 0
}

//*
// 文件消息
type FileMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`  // 文件名
	Md5  string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`    // 文件的md5值
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`    // 文件的url
	Ext  string `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`    // 文件的格式
	Size int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"` // 文件的大小
}

func (x *FileMessage) Reset() {
	*x = FileMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMessage) ProtoMessage() {}

func (x *FileMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMessage.ProtoReflect.Descriptor instead.
func (*FileMessage) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{15}
}

func (x *FileMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileMessage) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *FileMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileMessage) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *FileMessage) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type MessageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Md5      string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
	Url      string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Ext      string `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,omitempty"`
	W        int32  `protobuf:"varint,6,opt,name=w,proto3" json:"w,omitempty"`
	H        int32  `protobuf:"varint,7,opt,name=h,proto3" json:"h,omitempty"`
	Size     int32  `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Dur      int32  `protobuf:"varint,9,opt,name=dur,proto3" json:"dur,omitempty"`
	ThumbUrl string `protobuf:"bytes,10,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url,omitempty"`
}

func (x *MessageContent) Reset() {
	*x = MessageContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageContent) ProtoMessage() {}

func (x *MessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageContent.ProtoReflect.Descriptor instead.
func (*MessageContent) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{16}
}

func (x *MessageContent) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MessageContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageContent) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *MessageContent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageContent) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *MessageContent) GetW() int32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *MessageContent) GetH() int32 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *MessageContent) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MessageContent) GetDur() int32 {
	if x != nil {
		return x.Dur
	}
	return 0
}

func (x *MessageContent) GetThumbUrl() string {
	if x != nil {
		return x.ThumbUrl
	}
	return ""
}

// 获取用户会话记录
type GetUserSessionUnreadMsgListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"` // AppKey
	From   string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`                   // 会话
	To     string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                       // 会话
}

func (x *GetUserSessionUnreadMsgListRequest) Reset() {
	*x = GetUserSessionUnreadMsgListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSessionUnreadMsgListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSessionUnreadMsgListRequest) ProtoMessage() {}

func (x *GetUserSessionUnreadMsgListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSessionUnreadMsgListRequest.ProtoReflect.Descriptor instead.
func (*GetUserSessionUnreadMsgListRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserSessionUnreadMsgListRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *GetUserSessionUnreadMsgListRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetUserSessionUnreadMsgListRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type GetUserSessionUnreadMsgListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgList []*UserSessionMsg `protobuf:"bytes,1,rep,name=msg_list,json=msgList,proto3" json:"msg_list,omitempty"` // 会话消息列表
	Lrms    int64             `protobuf:"varint,2,opt,name=lrms,proto3" json:"lrms,omitempty"`                     // last read message sequence
	Version int32             `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`               // 消息数据版本
}

func (x *GetUserSessionUnreadMsgListResponse) Reset() {
	*x = GetUserSessionUnreadMsgListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSessionUnreadMsgListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSessionUnreadMsgListResponse) ProtoMessage() {}

func (x *GetUserSessionUnreadMsgListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSessionUnreadMsgListResponse.ProtoReflect.Descriptor instead.
func (*GetUserSessionUnreadMsgListResponse) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserSessionUnreadMsgListResponse) GetMsgList() []*UserSessionMsg {
	if x != nil {
		return x.MsgList
	}
	return nil
}

func (x *GetUserSessionUnreadMsgListResponse) GetLrms() int64 {
	if x != nil {
		return x.Lrms
	}
	return 0
}

func (x *GetUserSessionUnreadMsgListResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type UserSessionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId    string          `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`           // 消息Id
	MsgSeq   int64           `protobuf:"varint,2,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`       // 消息时间序列号
	MsgFrom  string          `protobuf:"bytes,3,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`     // 消息发送方
	MsgTo    string          `protobuf:"bytes,4,opt,name=msg_to,json=msgTo,proto3" json:"msg_to,omitempty"`           // 消息接收方
	SendTime string          `protobuf:"bytes,5,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`  // 消息发送时间
	MsgType  uint32          `protobuf:"varint,6,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`    // 消息类型
	MsgScope uint32          `protobuf:"varint,7,opt,name=msg_scope,json=msgScope,proto3" json:"msg_scope,omitempty"` // 消息范围
	Msg      *MessageContent `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`                            // 消息体，具体参考上述定义的各类型消息体
	Ext      string          `protobuf:"bytes,9,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *UserSessionMsg) Reset() {
	*x = UserSessionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSessionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSessionMsg) ProtoMessage() {}

func (x *UserSessionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSessionMsg.ProtoReflect.Descriptor instead.
func (*UserSessionMsg) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{19}
}

func (x *UserSessionMsg) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *UserSessionMsg) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *UserSessionMsg) GetMsgFrom() string {
	if x != nil {
		return x.MsgFrom
	}
	return ""
}

func (x *UserSessionMsg) GetMsgTo() string {
	if x != nil {
		return x.MsgTo
	}
	return ""
}

func (x *UserSessionMsg) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

func (x *UserSessionMsg) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *UserSessionMsg) GetMsgScope() uint32 {
	if x != nil {
		return x.MsgScope
	}
	return 0
}

func (x *UserSessionMsg) GetMsg() *MessageContent {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *UserSessionMsg) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

type GetUserSessionHistoryMsgListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`  // AppKey
	From   string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`                    //
	To     string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                        //
	MsgSeq int64  `protobuf:"varint,4,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"` // 消息序列号
}

func (x *GetUserSessionHistoryMsgListRequest) Reset() {
	*x = GetUserSessionHistoryMsgListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSessionHistoryMsgListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSessionHistoryMsgListRequest) ProtoMessage() {}

func (x *GetUserSessionHistoryMsgListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSessionHistoryMsgListRequest.ProtoReflect.Descriptor instead.
func (*GetUserSessionHistoryMsgListRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{20}
}

func (x *GetUserSessionHistoryMsgListRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *GetUserSessionHistoryMsgListRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetUserSessionHistoryMsgListRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetUserSessionHistoryMsgListRequest) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

type GetUserSessionHistoryMsgListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgList []*UserSessionMsg `protobuf:"bytes,1,rep,name=msg_list,json=msgList,proto3" json:"msg_list,omitempty"` // 会话消息列表
	Version int32             `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`               // 消息数据版本
}

func (x *GetUserSessionHistoryMsgListResponse) Reset() {
	*x = GetUserSessionHistoryMsgListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSessionHistoryMsgListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSessionHistoryMsgListResponse) ProtoMessage() {}

func (x *GetUserSessionHistoryMsgListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSessionHistoryMsgListResponse.ProtoReflect.Descriptor instead.
func (*GetUserSessionHistoryMsgListResponse) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserSessionHistoryMsgListResponse) GetMsgList() []*UserSessionMsg {
	if x != nil {
		return x.MsgList
	}
	return nil
}

func (x *GetUserSessionHistoryMsgListResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetUserTotalUnreadNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	Accid  string `protobuf:"bytes,2,opt,name=accid,proto3" json:"accid,omitempty"`
}

func (x *GetUserTotalUnreadNumberRequest) Reset() {
	*x = GetUserTotalUnreadNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTotalUnreadNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTotalUnreadNumberRequest) ProtoMessage() {}

func (x *GetUserTotalUnreadNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTotalUnreadNumberRequest.ProtoReflect.Descriptor instead.
func (*GetUserTotalUnreadNumberRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserTotalUnreadNumberRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *GetUserTotalUnreadNumberRequest) GetAccid() string {
	if x != nil {
		return x.Accid
	}
	return ""
}

type GetUserTotalUnreadNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUnreadNumber int64 `protobuf:"varint,1,opt,name=total_unread_number,json=totalUnreadNumber,proto3" json:"total_unread_number,omitempty"`
}

func (x *GetUserTotalUnreadNumberResponse) Reset() {
	*x = GetUserTotalUnreadNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTotalUnreadNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTotalUnreadNumberResponse) ProtoMessage() {}

func (x *GetUserTotalUnreadNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTotalUnreadNumberResponse.ProtoReflect.Descriptor instead.
func (*GetUserTotalUnreadNumberResponse) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{23}
}

func (x *GetUserTotalUnreadNumberResponse) GetTotalUnreadNumber() int64 {
	if x != nil {
		return x.TotalUnreadNumber
	}
	return 0
}

type GetAppDailyMessageStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey    string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	StartTime string `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Accid     string `protobuf:"bytes,4,opt,name=accid,proto3" json:"accid,omitempty"`
}

func (x *GetAppDailyMessageStatsRequest) Reset() {
	*x = GetAppDailyMessageStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppDailyMessageStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppDailyMessageStatsRequest) ProtoMessage() {}

func (x *GetAppDailyMessageStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppDailyMessageStatsRequest.ProtoReflect.Descriptor instead.
func (*GetAppDailyMessageStatsRequest) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{24}
}

func (x *GetAppDailyMessageStatsRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *GetAppDailyMessageStatsRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetAppDailyMessageStatsRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetAppDailyMessageStatsRequest) GetAccid() string {
	if x != nil {
		return x.Accid
	}
	return ""
}

type AppDailyMessageStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	T     string `protobuf:"bytes,1,opt,name=t,proto3" json:"t,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AppDailyMessageStats) Reset() {
	*x = AppDailyMessageStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDailyMessageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDailyMessageStats) ProtoMessage() {}

func (x *AppDailyMessageStats) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDailyMessageStats.ProtoReflect.Descriptor instead.
func (*AppDailyMessageStats) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{25}
}

func (x *AppDailyMessageStats) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

func (x *AppDailyMessageStats) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAppDailyMessageStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats []*AppDailyMessageStats `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *GetAppDailyMessageStatsResponse) Reset() {
	*x = GetAppDailyMessageStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_im_msg_svr_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppDailyMessageStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppDailyMessageStatsResponse) ProtoMessage() {}

func (x *GetAppDailyMessageStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msg_im_msg_svr_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppDailyMessageStatsResponse.ProtoReflect.Descriptor instead.
func (*GetAppDailyMessageStatsResponse) Descriptor() ([]byte, []int) {
	return file_msg_im_msg_svr_proto_rawDescGZIP(), []int{26}
}

func (x *GetAppDailyMessageStatsResponse) GetStats() []*AppDailyMessageStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

var File_msg_im_msg_svr_proto protoreflect.FileDescriptor

var file_msg_im_msg_svr_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x73, 0x67, 0x2f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x76, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x14, 0x49, 0x4d, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x5f, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x73, 0x67, 0x54, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x49, 0x0a, 0x13, 0x53,
	0x61, 0x76, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x73, 0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x54,
	0x6f, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x69, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x18, 0x49, 0x4d, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73,
	0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x54, 0x6f, 0x12, 0x15, 0x0a, 0x06,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x4b, 0x0a, 0x19, 0x49, 0x4d, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73,
	0x67, 0x53, 0x65, 0x71, 0x22, 0x78, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x54, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x22, 0x61,
	0x0a, 0x16, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65,
	0x79, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x54, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64,
	0x73, 0x22, 0x4d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63,
	0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x63, 0x69, 0x64,
	0x22, 0x50, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69,
	0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x22, 0x8c, 0x02, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x6d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x54, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73,
	0x67, 0x53, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x1f, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x0c, 0x0a, 0x01,
	0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x6a, 0x0a, 0x0c,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x75, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x75, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x75, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x68, 0x22, 0x6b, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xcb,
	0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x75, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x75, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x22, 0x61, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22,
	0x86, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73,
	0x67, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x72,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x72, 0x6d, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x6d,
	0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x73, 0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x54, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x7b,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x22, 0x73, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x50, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x63, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x63,
	0x69, 0x64, 0x22, 0x52, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b,
	0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x63, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x63,
	0x69, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x32, 0xcb, 0x07, 0x0a, 0x10, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x53, 0x61,
	0x76, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x2e, 0x69, 0x6d, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x49, 0x4d, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x53, 0x61, 0x76, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44,
	0x62, 0x12, 0x1f, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x0e, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x2e, 0x69,
	0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x4d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x4d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72,
	0x6b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1e, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x64, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e,
	0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6d, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x26, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x6d, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msg_im_msg_svr_proto_rawDescOnce sync.Once
	file_msg_im_msg_svr_proto_rawDescData = file_msg_im_msg_svr_proto_rawDesc
)

func file_msg_im_msg_svr_proto_rawDescGZIP() []byte {
	file_msg_im_msg_svr_proto_rawDescOnce.Do(func() {
		file_msg_im_msg_svr_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_im_msg_svr_proto_rawDescData)
	})
	return file_msg_im_msg_svr_proto_rawDescData
}

var file_msg_im_msg_svr_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_msg_im_msg_svr_proto_goTypes = []interface{}{
	(*IMSendMessageRequest)(nil),                 // 0: im.msg.IMSendMessageRequest
	(*SaveSendMsgResponse)(nil),                  // 1: im.msg.SaveSendMsgResponse
	(*SaveBatchMessageRequest)(nil),              // 2: im.msg.SaveBatchMessageRequest
	(*IMReceivedMessageRequest)(nil),             // 3: im.msg.IMReceivedMessageRequest
	(*IMReceivedMessageResponse)(nil),            // 4: im.msg.IMReceivedMessageResponse
	(*MsgMarkReadRequest)(nil),                   // 5: im.msg.MsgMarkReadRequest
	(*MsgMarkReceivedRequest)(nil),               // 6: im.msg.MsgMarkReceivedRequest
	(*GetUserRecentSessionsRequest)(nil),         // 7: im.msg.GetUserRecentSessionsRequest
	(*GetUserRecentSessionsResponse)(nil),        // 8: im.msg.GetUserRecentSessionsResponse
	(*UserSession)(nil),                          // 9: im.msg.UserSession
	(*UserSessionLastMsg)(nil),                   // 10: im.msg.UserSessionLastMsg
	(*TextMessage)(nil),                          // 11: im.msg.TextMessage
	(*ImageMessage)(nil),                         // 12: im.msg.ImageMessage
	(*AudioMessage)(nil),                         // 13: im.msg.AudioMessage
	(*VideoMessage)(nil),                         // 14: im.msg.VideoMessage
	(*FileMessage)(nil),                          // 15: im.msg.FileMessage
	(*MessageContent)(nil),                       // 16: im.msg.MessageContent
	(*GetUserSessionUnreadMsgListRequest)(nil),   // 17: im.msg.GetUserSessionUnreadMsgListRequest
	(*GetUserSessionUnreadMsgListResponse)(nil),  // 18: im.msg.GetUserSessionUnreadMsgListResponse
	(*UserSessionMsg)(nil),                       // 19: im.msg.UserSessionMsg
	(*GetUserSessionHistoryMsgListRequest)(nil),  // 20: im.msg.GetUserSessionHistoryMsgListRequest
	(*GetUserSessionHistoryMsgListResponse)(nil), // 21: im.msg.GetUserSessionHistoryMsgListResponse
	(*GetUserTotalUnreadNumberRequest)(nil),      // 22: im.msg.GetUserTotalUnreadNumberRequest
	(*GetUserTotalUnreadNumberResponse)(nil),     // 23: im.msg.GetUserTotalUnreadNumberResponse
	(*GetAppDailyMessageStatsRequest)(nil),       // 24: im.msg.GetAppDailyMessageStatsRequest
	(*AppDailyMessageStats)(nil),                 // 25: im.msg.AppDailyMessageStats
	(*GetAppDailyMessageStatsResponse)(nil),      // 26: im.msg.GetAppDailyMessageStatsResponse
	(*any.Any)(nil),                              // 27: google.protobuf.Any
	(*empty.Empty)(nil),                          // 28: google.protobuf.Empty
}
var file_msg_im_msg_svr_proto_depIdxs = []int32{
	27, // 0: im.msg.IMSendMessageRequest.msg:type_name -> google.protobuf.Any
	9,  // 1: im.msg.GetUserRecentSessionsResponse.sessions:type_name -> im.msg.UserSession
	10, // 2: im.msg.UserSession.last_msg:type_name -> im.msg.UserSessionLastMsg
	16, // 3: im.msg.UserSessionLastMsg.msg_content:type_name -> im.msg.MessageContent
	16, // 4: im.msg.UserSessionLastMsg.msg:type_name -> im.msg.MessageContent
	19, // 5: im.msg.GetUserSessionUnreadMsgListResponse.msg_list:type_name -> im.msg.UserSessionMsg
	16, // 6: im.msg.UserSessionMsg.msg:type_name -> im.msg.MessageContent
	19, // 7: im.msg.GetUserSessionHistoryMsgListResponse.msg_list:type_name -> im.msg.UserSessionMsg
	25, // 8: im.msg.GetAppDailyMessageStatsResponse.stats:type_name -> im.msg.AppDailyMessageStats
	0,  // 9: im.msg.IMMessageService.SaveSendMsg:input_type -> im.msg.IMSendMessageRequest
	2,  // 10: im.msg.IMMessageService.InsertBatchMessageMongoDb:input_type -> im.msg.SaveBatchMessageRequest
	3,  // 11: im.msg.IMMessageService.SaveReceiveMsg:input_type -> im.msg.IMReceivedMessageRequest
	5,  // 12: im.msg.IMMessageService.MsgMarkRead:input_type -> im.msg.MsgMarkReadRequest
	6,  // 13: im.msg.IMMessageService.MsgMarkReceived:input_type -> im.msg.MsgMarkReceivedRequest
	7,  // 14: im.msg.IMMessageService.GetUserRecentSessions:input_type -> im.msg.GetUserRecentSessionsRequest
	17, // 15: im.msg.IMMessageService.GetUserSessionUnreadMsgList:input_type -> im.msg.GetUserSessionUnreadMsgListRequest
	20, // 16: im.msg.IMMessageService.GetUserSessionHistoryMsgList:input_type -> im.msg.GetUserSessionHistoryMsgListRequest
	22, // 17: im.msg.IMMessageService.GetUserTotalUnreadNumber:input_type -> im.msg.GetUserTotalUnreadNumberRequest
	24, // 18: im.msg.IMMessageService.GetAppDailyMessageStats:input_type -> im.msg.GetAppDailyMessageStatsRequest
	1,  // 19: im.msg.IMMessageService.SaveSendMsg:output_type -> im.msg.SaveSendMsgResponse
	28, // 20: im.msg.IMMessageService.InsertBatchMessageMongoDb:output_type -> google.protobuf.Empty
	4,  // 21: im.msg.IMMessageService.SaveReceiveMsg:output_type -> im.msg.IMReceivedMessageResponse
	28, // 22: im.msg.IMMessageService.MsgMarkRead:output_type -> google.protobuf.Empty
	28, // 23: im.msg.IMMessageService.MsgMarkReceived:output_type -> google.protobuf.Empty
	8,  // 24: im.msg.IMMessageService.GetUserRecentSessions:output_type -> im.msg.GetUserRecentSessionsResponse
	18, // 25: im.msg.IMMessageService.GetUserSessionUnreadMsgList:output_type -> im.msg.GetUserSessionUnreadMsgListResponse
	21, // 26: im.msg.IMMessageService.GetUserSessionHistoryMsgList:output_type -> im.msg.GetUserSessionHistoryMsgListResponse
	23, // 27: im.msg.IMMessageService.GetUserTotalUnreadNumber:output_type -> im.msg.GetUserTotalUnreadNumberResponse
	26, // 28: im.msg.IMMessageService.GetAppDailyMessageStats:output_type -> im.msg.GetAppDailyMessageStatsResponse
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_msg_im_msg_svr_proto_init() }
func file_msg_im_msg_svr_proto_init() {
	if File_msg_im_msg_svr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msg_im_msg_svr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMSendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveSendMsgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBatchMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMReceivedMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMReceivedMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMarkReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMarkReceivedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRecentSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRecentSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSessionLastMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSessionUnreadMsgListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSessionUnreadMsgListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSessionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSessionHistoryMsgListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSessionHistoryMsgListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTotalUnreadNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTotalUnreadNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppDailyMessageStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDailyMessageStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_im_msg_svr_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppDailyMessageStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_im_msg_svr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_msg_im_msg_svr_proto_goTypes,
		DependencyIndexes: file_msg_im_msg_svr_proto_depIdxs,
		MessageInfos:      file_msg_im_msg_svr_proto_msgTypes,
	}.Build()
	File_msg_im_msg_svr_proto = out.File
	file_msg_im_msg_svr_proto_rawDesc = nil
	file_msg_im_msg_svr_proto_goTypes = nil
	file_msg_im_msg_svr_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IMMessageServiceClient is the client API for IMMessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IMMessageServiceClient interface {
	SaveSendMsg(ctx context.Context, in *IMSendMessageRequest, opts ...grpc.CallOption) (*SaveSendMsgResponse, error)
	InsertBatchMessageMongoDb(ctx context.Context, in *SaveBatchMessageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SaveReceiveMsg(ctx context.Context, in *IMReceivedMessageRequest, opts ...grpc.CallOption) (*IMReceivedMessageResponse, error)
	MsgMarkRead(ctx context.Context, in *MsgMarkReadRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	MsgMarkReceived(ctx context.Context, in *MsgMarkReceivedRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserRecentSessions(ctx context.Context, in *GetUserRecentSessionsRequest, opts ...grpc.CallOption) (*GetUserRecentSessionsResponse, error)
	GetUserSessionUnreadMsgList(ctx context.Context, in *GetUserSessionUnreadMsgListRequest, opts ...grpc.CallOption) (*GetUserSessionUnreadMsgListResponse, error)
	GetUserSessionHistoryMsgList(ctx context.Context, in *GetUserSessionHistoryMsgListRequest, opts ...grpc.CallOption) (*GetUserSessionHistoryMsgListResponse, error)
	GetUserTotalUnreadNumber(ctx context.Context, in *GetUserTotalUnreadNumberRequest, opts ...grpc.CallOption) (*GetUserTotalUnreadNumberResponse, error)
	GetAppDailyMessageStats(ctx context.Context, in *GetAppDailyMessageStatsRequest, opts ...grpc.CallOption) (*GetAppDailyMessageStatsResponse, error)
}

type iMMessageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIMMessageServiceClient(cc grpc.ClientConnInterface) IMMessageServiceClient {
	return &iMMessageServiceClient{cc}
}

func (c *iMMessageServiceClient) SaveSendMsg(ctx context.Context, in *IMSendMessageRequest, opts ...grpc.CallOption) (*SaveSendMsgResponse, error) {
	out := new(SaveSendMsgResponse)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/SaveSendMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) InsertBatchMessageMongoDb(ctx context.Context, in *SaveBatchMessageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/InsertBatchMessageMongoDb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) SaveReceiveMsg(ctx context.Context, in *IMReceivedMessageRequest, opts ...grpc.CallOption) (*IMReceivedMessageResponse, error) {
	out := new(IMReceivedMessageResponse)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/SaveReceiveMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) MsgMarkRead(ctx context.Context, in *MsgMarkReadRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/MsgMarkRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) MsgMarkReceived(ctx context.Context, in *MsgMarkReceivedRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/MsgMarkReceived", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) GetUserRecentSessions(ctx context.Context, in *GetUserRecentSessionsRequest, opts ...grpc.CallOption) (*GetUserRecentSessionsResponse, error) {
	out := new(GetUserRecentSessionsResponse)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/GetUserRecentSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) GetUserSessionUnreadMsgList(ctx context.Context, in *GetUserSessionUnreadMsgListRequest, opts ...grpc.CallOption) (*GetUserSessionUnreadMsgListResponse, error) {
	out := new(GetUserSessionUnreadMsgListResponse)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/GetUserSessionUnreadMsgList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) GetUserSessionHistoryMsgList(ctx context.Context, in *GetUserSessionHistoryMsgListRequest, opts ...grpc.CallOption) (*GetUserSessionHistoryMsgListResponse, error) {
	out := new(GetUserSessionHistoryMsgListResponse)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/GetUserSessionHistoryMsgList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) GetUserTotalUnreadNumber(ctx context.Context, in *GetUserTotalUnreadNumberRequest, opts ...grpc.CallOption) (*GetUserTotalUnreadNumberResponse, error) {
	out := new(GetUserTotalUnreadNumberResponse)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/GetUserTotalUnreadNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMMessageServiceClient) GetAppDailyMessageStats(ctx context.Context, in *GetAppDailyMessageStatsRequest, opts ...grpc.CallOption) (*GetAppDailyMessageStatsResponse, error) {
	out := new(GetAppDailyMessageStatsResponse)
	err := c.cc.Invoke(ctx, "/im.msg.IMMessageService/GetAppDailyMessageStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IMMessageServiceServer is the server API for IMMessageService service.
type IMMessageServiceServer interface {
	SaveSendMsg(context.Context, *IMSendMessageRequest) (*SaveSendMsgResponse, error)
	InsertBatchMessageMongoDb(context.Context, *SaveBatchMessageRequest) (*empty.Empty, error)
	SaveReceiveMsg(context.Context, *IMReceivedMessageRequest) (*IMReceivedMessageResponse, error)
	MsgMarkRead(context.Context, *MsgMarkReadRequest) (*empty.Empty, error)
	MsgMarkReceived(context.Context, *MsgMarkReceivedRequest) (*empty.Empty, error)
	GetUserRecentSessions(context.Context, *GetUserRecentSessionsRequest) (*GetUserRecentSessionsResponse, error)
	GetUserSessionUnreadMsgList(context.Context, *GetUserSessionUnreadMsgListRequest) (*GetUserSessionUnreadMsgListResponse, error)
	GetUserSessionHistoryMsgList(context.Context, *GetUserSessionHistoryMsgListRequest) (*GetUserSessionHistoryMsgListResponse, error)
	GetUserTotalUnreadNumber(context.Context, *GetUserTotalUnreadNumberRequest) (*GetUserTotalUnreadNumberResponse, error)
	GetAppDailyMessageStats(context.Context, *GetAppDailyMessageStatsRequest) (*GetAppDailyMessageStatsResponse, error)
}

// UnimplementedIMMessageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIMMessageServiceServer struct {
}

func (*UnimplementedIMMessageServiceServer) SaveSendMsg(context.Context, *IMSendMessageRequest) (*SaveSendMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveSendMsg not implemented")
}
func (*UnimplementedIMMessageServiceServer) InsertBatchMessageMongoDb(context.Context, *SaveBatchMessageRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertBatchMessageMongoDb not implemented")
}
func (*UnimplementedIMMessageServiceServer) SaveReceiveMsg(context.Context, *IMReceivedMessageRequest) (*IMReceivedMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveReceiveMsg not implemented")
}
func (*UnimplementedIMMessageServiceServer) MsgMarkRead(context.Context, *MsgMarkReadRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgMarkRead not implemented")
}
func (*UnimplementedIMMessageServiceServer) MsgMarkReceived(context.Context, *MsgMarkReceivedRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgMarkReceived not implemented")
}
func (*UnimplementedIMMessageServiceServer) GetUserRecentSessions(context.Context, *GetUserRecentSessionsRequest) (*GetUserRecentSessionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserRecentSessions not implemented")
}
func (*UnimplementedIMMessageServiceServer) GetUserSessionUnreadMsgList(context.Context, *GetUserSessionUnreadMsgListRequest) (*GetUserSessionUnreadMsgListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSessionUnreadMsgList not implemented")
}
func (*UnimplementedIMMessageServiceServer) GetUserSessionHistoryMsgList(context.Context, *GetUserSessionHistoryMsgListRequest) (*GetUserSessionHistoryMsgListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSessionHistoryMsgList not implemented")
}
func (*UnimplementedIMMessageServiceServer) GetUserTotalUnreadNumber(context.Context, *GetUserTotalUnreadNumberRequest) (*GetUserTotalUnreadNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTotalUnreadNumber not implemented")
}
func (*UnimplementedIMMessageServiceServer) GetAppDailyMessageStats(context.Context, *GetAppDailyMessageStatsRequest) (*GetAppDailyMessageStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppDailyMessageStats not implemented")
}

func RegisterIMMessageServiceServer(s *grpc.Server, srv IMMessageServiceServer) {
	s.RegisterService(&_IMMessageService_serviceDesc, srv)
}

func _IMMessageService_SaveSendMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IMSendMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).SaveSendMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/SaveSendMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).SaveSendMsg(ctx, req.(*IMSendMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_InsertBatchMessageMongoDb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveBatchMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).InsertBatchMessageMongoDb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/InsertBatchMessageMongoDb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).InsertBatchMessageMongoDb(ctx, req.(*SaveBatchMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_SaveReceiveMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IMReceivedMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).SaveReceiveMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/SaveReceiveMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).SaveReceiveMsg(ctx, req.(*IMReceivedMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_MsgMarkRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarkReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).MsgMarkRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/MsgMarkRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).MsgMarkRead(ctx, req.(*MsgMarkReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_MsgMarkReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarkReceivedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).MsgMarkReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/MsgMarkReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).MsgMarkReceived(ctx, req.(*MsgMarkReceivedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_GetUserRecentSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRecentSessionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).GetUserRecentSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/GetUserRecentSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).GetUserRecentSessions(ctx, req.(*GetUserRecentSessionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_GetUserSessionUnreadMsgList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSessionUnreadMsgListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).GetUserSessionUnreadMsgList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/GetUserSessionUnreadMsgList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).GetUserSessionUnreadMsgList(ctx, req.(*GetUserSessionUnreadMsgListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_GetUserSessionHistoryMsgList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSessionHistoryMsgListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).GetUserSessionHistoryMsgList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/GetUserSessionHistoryMsgList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).GetUserSessionHistoryMsgList(ctx, req.(*GetUserSessionHistoryMsgListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_GetUserTotalUnreadNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTotalUnreadNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).GetUserTotalUnreadNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/GetUserTotalUnreadNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).GetUserTotalUnreadNumber(ctx, req.(*GetUserTotalUnreadNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMMessageService_GetAppDailyMessageStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppDailyMessageStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMMessageServiceServer).GetAppDailyMessageStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/im.msg.IMMessageService/GetAppDailyMessageStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMMessageServiceServer).GetAppDailyMessageStats(ctx, req.(*GetAppDailyMessageStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IMMessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "im.msg.IMMessageService",
	HandlerType: (*IMMessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveSendMsg",
			Handler:    _IMMessageService_SaveSendMsg_Handler,
		},
		{
			MethodName: "InsertBatchMessageMongoDb",
			Handler:    _IMMessageService_InsertBatchMessageMongoDb_Handler,
		},
		{
			MethodName: "SaveReceiveMsg",
			Handler:    _IMMessageService_SaveReceiveMsg_Handler,
		},
		{
			MethodName: "MsgMarkRead",
			Handler:    _IMMessageService_MsgMarkRead_Handler,
		},
		{
			MethodName: "MsgMarkReceived",
			Handler:    _IMMessageService_MsgMarkReceived_Handler,
		},
		{
			MethodName: "GetUserRecentSessions",
			Handler:    _IMMessageService_GetUserRecentSessions_Handler,
		},
		{
			MethodName: "GetUserSessionUnreadMsgList",
			Handler:    _IMMessageService_GetUserSessionUnreadMsgList_Handler,
		},
		{
			MethodName: "GetUserSessionHistoryMsgList",
			Handler:    _IMMessageService_GetUserSessionHistoryMsgList_Handler,
		},
		{
			MethodName: "GetUserTotalUnreadNumber",
			Handler:    _IMMessageService_GetUserTotalUnreadNumber_Handler,
		},
		{
			MethodName: "GetAppDailyMessageStats",
			Handler:    _IMMessageService_GetAppDailyMessageStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msg/im_msg_svr.proto",
}
